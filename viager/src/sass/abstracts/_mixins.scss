@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin flex-col-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

@mixin flex-col-start {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-row-center {
  display: flex;
  justify-content: center;
}

@mixin flex-col {
  display: flex;
  flex-direction: column;
}

// MEDIA QUERY MANAGER
/*
  0 - 599px: Mobile
  600 - 899px: Tablet Portrait
  900 - 1199px: Tablet Landscape
  [1200 - 1799px]: Desktop
  1800px and up: Large Desktop
  */

$breakpoints: (
  mobile: 0,
  tabletPortrait: 600px,
  tabletLandscape: 900px,
  desktop: 1200px,
  largeDesktop: 1800px,
);

//1em = 16px

//ORDER : BASE + typography + general layout + grid > page layout > components > utilities

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media (min-width: 37.5em) {
      //600px
      @content;
    }
  } @else if $breakpoint == tab-port {
    @media (min-width: 56.25em) {
      //900px
      @content;
    }
  } @else if $breakpoint == tab-land {
    @media (min-width: 75em) {
      //1200px
      @content;
    }
  } @else if $breakpoint == desktop {
    @media (min-width: 90em) {
      //1440px
      @content;
    }
  } @else if $breakpoint == big-desktop {
    @media (min-width: 112.5em) {
      //1800px
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}";
  }
}
//-----------------------------------
@mixin respond_two($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}.";
  }
}
